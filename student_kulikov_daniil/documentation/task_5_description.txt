**Контекст задачи (краткое описание) **
1) Ознакомиться с итоговым b build файлом после компиляции модуля.

**Что было сделано и как? (краткое описание)**
2) Открыл модуль и начал изучать

**Зачем это было сделано? Чему научился в процессе выполнения задания?**
3)
Gradle спроектирован согласно принципу "Convention over Configuration"
(«соглашение важнее конфигурации»). Это означает, что если ваш проект
следует стандартной структуре и использует типичные плагины,
то Gradle автоматически регистрирует и настраивает множество задач,
необходимых для сборки.

JAR (Java Archive) — это архивный файл, основанный на формате ZIP,
который служит для упаковки одного или нескольких файлов скомпилированного
Java-кода (файлов .class), а также сопутствующих ресурсов
(конфигурационные файлы, изображения, файлы свойств и т.д.).

Структура:
- classes - тут лежит bytecode откомпилированных классов
- classes/java/main - bytecode продакшн классов
- classes/java/test - bytecode тестовых классов
- generated - тут будет лежать сгенерированный при компиляции код (о нем вы узнаете чуть позже)
- libs - тут лежит собранный из продакшн кода jar файл
- reports - содержит сгенерированный отчет по тестам
- resources - содержит файлы ресурсов используемые приложением (о них вы узнаете чуть позже)
- test-results - содержит результаты выполнения тестов

**Сколько потратил времени на выполнение задачи?**
4) 40 минут

**Заметки, идеи, предложения в свободной форме**
